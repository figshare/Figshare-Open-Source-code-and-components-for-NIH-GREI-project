diff --git a/src/figcore/api/account/actions/account.py b/src/figcore/api/account/actions/account.py
index e25ecd627c..c5b1764ac7 100644
--- a/src/figcore/api/account/actions/account.py
+++ b/src/figcore/api/account/actions/account.py
@@ -477,7 +477,7 @@ def create_related_material(self, data):
         return related_material
 
     def update_related_material(self, id, data):
-        related_material = self.ENTITIES.RelatedMaterial(id)
+        related_material = self.ENTITIES.RelatedMaterial.find(id)
         if related_material.account_id != self.account.id:
             raise fig_exc.InsufficientPermissions("Cannot update related material")
         data["account_id"] = self.account.id
diff --git a/src/figcore/api/article/api.py b/src/figcore/api/article/api.py
index f7a7bc0685..7caa7de8b8 100644
--- a/src/figcore/api/article/api.py
+++ b/src/figcore/api/article/api.py
@@ -2860,7 +2860,7 @@ def get_published_date(self):
     def bcheck_references(self):
         references = self._metadata.references
         if self._metadata.references and isinstance(self._metadata.references[0], int):
-            references = [APIEntity.ENTITIES.RelatedMaterial(i).link for i in self._metadata.references]
+            references = [APIEntity.ENTITIES.RelatedMaterial.find(i).link for i in self._metadata.references]
         return [Text(url).format_url(encode=True) for url in references]
 
     def bcheck_related_material(self):
diff --git a/src/figcore/api/article/validator.py b/src/figcore/api/article/validator.py
index 7816f1ac76..ee9a797958 100644
--- a/src/figcore/api/article/validator.py
+++ b/src/figcore/api/article/validator.py
@@ -251,7 +251,7 @@ def _check_related_materials_linkout(self):
         related_materials = self._get_final_value("related_materials")
         if related_materials and isinstance(related_materials[0], int):
             for material in related_materials:
-                if APIEntity.ENTITIES.RelatedMaterial(material).is_linkout:
+                if APIEntity.ENTITIES.RelatedMaterial.find(material).is_linkout:
                     return True
         return False
 
@@ -542,7 +542,7 @@ def _validate_article_references(self):
 
         values = references
         if references and isinstance(references[0], int):
-            values = [APIEntity.ENTITIES.RelatedMaterial(i) for i in references]
+            values = [APIEntity.ENTITIES.RelatedMaterial.find(i) for i in references]
             linkouts = sum(v.is_linkout for v in values)
             if linkouts > self.MAX_LINKOUTS:
                 raise exc.InvalidValue(
diff --git a/src/figcore/api/article/version_api.py b/src/figcore/api/article/version_api.py
index 7e33b8a6c0..d7e3657e34 100644
--- a/src/figcore/api/article/version_api.py
+++ b/src/figcore/api/article/version_api.py
@@ -1768,7 +1768,7 @@ def bcheck_references(self):
         if self._metadata.references and isinstance(self._metadata.references[0], int):
             references = []
             for i in self._metadata.references:
-                references.append(APIEntity.ENTITIES.RelatedMaterial(i).link)
+                references.append(APIEntity.ENTITIES.RelatedMaterial.find(i).link)
             return references
         return self._metadata.references
 
diff --git a/src/figcore/lib/identifier/doi/__init__.py b/src/figcore/lib/identifier/doi/__init__.py
index bf4155491e..5c31156c23 100644
--- a/src/figcore/lib/identifier/doi/__init__.py
+++ b/src/figcore/lib/identifier/doi/__init__.py
@@ -447,7 +447,7 @@ def build_xml(self, item_data):
                 self._add_relation_node(related_ids, "DOI", "IsPreviousVersionOf", base_identifier)
 
             for i in related_materials:
-                material = RelatedMaterial(i)
+                material = RelatedMaterial.find(i)
                 self._add_relation_node(related_ids, material.identifier_type, material.relation, material.identifier)
 
         # Set the license information
